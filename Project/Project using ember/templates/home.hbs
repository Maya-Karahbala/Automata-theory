<div class="container" id="gradient">
    <div class="row">
        <div class="col-12">
            <div>
                <h1 class="large"> Regular Expressions</h1>
                <h1 class="large med">Automation theory 
                         term project</h1>

            </div>

        </div>

    </div>
</div>
<div class="row" id="about">
    <div class="col-10">
        <div class="box">
            <h2><span>What is Regex</span></h2>

            <p class="text">

                RegExp Object
                <br> A regular expression is an object that describes a pattern of characters.
                <br> Regular expressions are used to perform pattern-matching and "search-and-replace" functions on text.
                <br> Creating a regular expression:
            </p>

            <pre><code>var re = /ab+c/;
var re = new RegExp('ab+c');  </code></pre>

        </div>
    </div>
</div>
<!-- methods line-->
<div class="row">
    <div class="col-10">
        <div class="box">
            <h2><span> RegEx Methods</span></h2>
            <table id="mehodsTable">
                <tr>
                    <th>Method</th>
                    <th>Description</th>

                </tr>
                <tr>
                    <td>exec</td>
                    <td>A RegExp method that executes a search for a match in a string. It returns an array of information or null on a mismatch.</td>

                </tr>
                <tr>
                    <td>test</td>
                    <td>A RegExp method that tests for a match in a string. It returns true or false.</td>

                </tr>
                <tr>

                    <td>match</td>
                    <td>A String method that executes a search for a match in a string. It returns an array of information or null on a mismatch.</td>
                </tr>
                <tr>
                    <td>matchAll</td>
                    <td>
                        matchAll A String method that returns an iterator containing all of the matches, including capturing groups.</td>

                </tr>
                <tr>

                    <td>search</td>
                    <td>A String method that tests for a match in a string. It returns the index of the match, or -1 if the search fails.</td>
                </tr>
                <tr>

                    <td>replace</td>
                    <td>A String method that executes a search for a match in a string, and replaces the matched substring with a replacement substring.</td>
                </tr>
                <tr>

                    <td>split</td>
                    <td>A String method that uses a regular expression or a fixed string to break a string into an array of substrings.</td>
                </tr>

            </table>

        </div>
    </div>
</div>
<!-- Rules-->
<div class="row" id="rules">
    <div class="col-10">
        <div class="box">
            <h2><span> RegEx Rules</span></h2>
            <table id="mehodsTable">
                <tr>
                    <th></th>
                    <th>Description</th>

                </tr>
                <tr>
                    <td> . </td>
                    <td>matches any character except line breaks. Equivalent to [^\n\r].</td>

                </tr>
                <tr>
                    <td>\w</td>
                    <td>matches any word character (alphanumeric & underscore).</td>

                </tr>
                <tr>

                    <td>\d</td>
                    <td>matches any digit character (0-9). Equivalent to [0-9].</td>
                </tr>
                <tr>
                    <td>\s</td>
                    <td>
                        matches any whitespace character (spaces, tabs, line breaks).</td>

                </tr>
                <tr>

                    <td>[ABC]</td>
                    <td>matches any character in the set.</td>
                </tr>
                <tr>

                    <td>[^ABC]</td>
                    <td>matches any character is not in the set.</td>
                </tr>
                <tr>

                    <td>[A-Z]</td>
                    <td> matches a character having a character code between the two specified characters inclusive.</td>
                </tr>
                <tr>

                    <td>[A-Z]</td>
                    <td> matches a character having a character code between the two specified characters inclusive.</td>
                </tr>
                <tr>

                    <td>+</td>
                    <td> matches 1 or more of the preceding token.</td>
                </tr>
                <tr>

                    <td>*</td>
                    <td> matches 0 or more of the preceding token.</td>
                </tr>
                <tr>

                    <td>?</td>
                    <td> matches 0 or 1 of the preceding token, effectively making it optional. </td>
                </tr>
                <tr>

                    <td>|</td>
                    <td> acts like a boolean OR.</td>
                </tr>
                <tr>

                    <td>[A-Z]</td>
                    <td> matches a character having a character code between the two specified characters inclusive.</td>
                </tr>

            </table>

        </div>
    </div>
</div>
<!-- -->